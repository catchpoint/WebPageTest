[settings]
product=WebPagetest
contact=admin@my.email.com

; **************
; UI Integration
; **************

; Comment out the publishTo if you do not want to be able to upload your
; results to the public instance (this is useful for sharing internal tests
; with external users)
;publishTo=www.webpagetest.org

;Uncomment map=1 if you want to enable the map-based picker
;map=1

; Log in with Google
;google_oauth_client_id=<client ID>
;google_oauth_client_secret=<secret>

; Uncomment to enable drawing of vertical lines in the waterfalls for all user timing marks
;waterfall_show_user_timing=1

; Comment-out to use classic-colored waterfalls as the default
mime_waterfalls=1

; Uncomment to disable the testlog in the UI
;disableTestlog=1

; *********************
; Test options/defaults
; *********************

enableVideo=1

;Full Size Video capturing - enabled (1) or disable (0)
fullSizeVideoOn=1
;Full Size Video - default checkbox state - ticked (1) or unticked (0)
fullSizeVideoDefault=0

; Disable all video capture and processing when tests do not opt for video.
; Usually the agents will still capture video to calculate the visual metrics
; but the video will not be uploaded. With strict_video enabled, tests without
; video capture will not get visual metrics.
;strict_video=1

; Maximum number of runs allowed per test
maxruns=9

; Default timeout for each step of a test (in seconds)
;step_timeout=120

; Maximum amount of time for a test run (if requested by timeout=X)
maxtime=600

; Time limit for all steps in a single test run.
;run_time_limit=180

; Force individual runs to end if they didn't complete.
max_run_minutes=60

; Force a test to stop if the page exceeds a certain number of requests (0 to disable)
;max_requests=0

; Maximum server load to allow when rendering video on the server
render_max_load=8

; Allow (1) or disable (0) testing of sites on private IP addresses (http://192.168.0.1/ for example).
allowPrivate=1

; Allow (1) or disallow (0) non fully qualified domain names for URL hostnames (commonly found on private intranets)
allowNonFQDN=0

; image quality (defaults to 30)
;iq=75

;save png full-resolution screenshots
;pngss=1

;Uncomment to disable the force "3G Fast" throttling applied to lighthouse tests.
;lighthouseThrottle=1

;Software identification string to include in the user agent string of tests
;UAModifier=PTST

; Default browser dimensions if not specified as part of a test.
; Defaults to the agent default if not specified (1024x768 usually).
;default_browser_size=1024x768

; Enables trace and pcap processing directly on the test agents.
enable_agent_processing=1

; Sets the maximum number of navigates in a script
maxNavigateCount=20

; Selects the metric to use for the median run (defaults to loadTime)
; medianMetric=SpeedIndex

; Block domains from all tests (space-delimited list)
;blockDomains=ctldl.windowsupdate.com

; *************
; Server Config
; *************

; Host name to use for URLs when it can not be automatically detected.
; This is mostly for auto-scaling EC2 instances to tell the agents what server to connect to
;host=www.webpagetest.org

; Base URI to use for loopback requests (background processing, video creation, etc).
; This is mostly used when the pages are behind authentication and need another path
; for processing background tasks.
;local_server=http://127.0.0.1

; Default API key to use across all locations
;location_key=AlphaNumericKey

; disable gzip compressing the result text files
;nogzip=1

;Log tests that take longer than X seconds
;slow_test_time=240

; beanstalkd memory queue for tests (only the default 11300 port is supported right now)
; This is the legacy mode used to apply beanstalkd to all work queues unilaterally
;beanstalkd=127.0.0.1

; beanstalkd memory queue config (for locations configured to use it and for messaging queues)
;queue=beanstalk
;beanstalkAddr=127.0.0.1
;beanstalkPort=11300


; Use beanstalkd only for low-priority tests and use traditional work queues for high-priority.
; The benefit of this is that interactive tests will still get queue position while still
; scaling for huge numbers of API tests.
;beanstalk_api_only=0

; Automatically update from git hourly.
; (assumes a git clone and just runs "git pull" as the web user).
;gitUpdate=1

; If an android device is connected to the server, scrape updated APK's off of the
; device to be installed on the test agents automatically (for cases where
; play auto-updating doesn't work - i.e. reverse-tethered devices)
;apkPackages=com.android.chrome,com.chrome.dev,com.chrome.beta


; For multi-server installs, an ID that gets added to the test ID for server affinity.
; Must be alpha-numeric and will end up as part of the hash string in the test ID:
; YYMMDD_<serverID>hash_xxx
;serverID=A

; For syncing test history and API usage across multiple servers (comma-separated list)
;sync-secret="somesecretstring"
;sync-servers="https://www.webpagetest.org/sync.php"


; Allow for proxying requests for test data for the main progress and results page 
; with a given server ID to a different server.
; This way the requests will be sticky to the server that created it while the test is in the queue 
; (at the extra complexity and cost of proxying the requests from one server to another)
;proxy_B="b.webpagetest.org"


; List of URLs that point directly to individual servers behind a load balancer
; for an agent to request work from (round-robin).
;work_servers="http://a.webpagetest.org/work/,http://b.webpagetest.org/work/"

; Base URL for work for this specific server so that results will be posted back
; to the same server that originated a task.
;work_server="http://a.webpagetest.org/work/"

; For basic authentication with WPT server
;ba_username=username
;ba_password=password
;validcertificate=1

; For integration with invisible reCAPTCHA
;recaptcha_site_key=
;recaptcha_secret_key=


; ***********************
; Test result integration
; ***********************

; Chrome user Experience Report API integration. Populate crux_api_key with a
; single API key for the CrUX API to have the server query the API for performance 
; data when a test is submitted (most reliable and well tested).
; OR populate crux_agent_api_keys with a comma-delimited list of API keys to rotate
; through and have the agents fetch the CrUX performance for (experimental).
;crux_api_key=xxxxx
;crux_agent_api_keys=xxxxx,yyyyyy,zzzzz


;tsview time-series database
;tsviewdb=http://<server:port>/src/v1/


; Publish test results to a StatsD backend
; for trend visualization.
;
; statsdHost - StatsD hostname.
; statsdPort - StatsD port number (default: 8125).
; statsdPrefix - Graphite key prefix (default: '').
; statsdPattern - Set to a valid regexp pattern to send only matching tests labels.
; statsdCleanPattern - Set to 1 to exclude pattern from label (default: 0).
; statsdMedianOnly - Set to 1 to send only median tests to StatsD. (default: 0).
;
;statsdHost=127.0.0.1
;statsdPort=8125
;statsdPrefix=webpagetest
;statsdPattern=^cron_
;statsdCleanPattern=0
;statsdMedianOnly=0

; Default URL to ping when the test is complete
;ping_back_url=http://pingbackurl.com

; **************
; Test Archiving
; **************

; archiving to local storage
; archive_dir - directory to archive test files (must include trailing slash)
; archive_kept_days - The tests in archive_dir that are more than archive_kept_days
;           days older will be deleted. If archive_kept_days is not defined, archived
;           tests will be kept forever.
; archive_dir=/data/archive/
; archive_kept_days=365

; archiving to s3 (using the s3 protocol, not necessarily just s3)
;archive_s3_server=s3.amazonaws.com
;archive_s3_key=<access key>
;archive_s3_secret=<secret>
;archive_s3_bucket=<bucket>
;archive_s3_url=http://s3.amazonaws.com/

; s3 url style - valid options are 'vhost' or 'path'. The default is 'vhost'
; example of s3 url styles:
;   - vhost: http://<bucket>.<s3_server>/object
;   - path: http://<s3_server>/<bucket>/object
;archive_s3_urlstyle=vhost

;Number of days to keep tests locally before archiving
;archive_days=2

;Run archive script hourly automatically as agents poll for work
;cron_archive=1

; *************
; EC2 Instances
; *************

; Use if the server will be auto-starting/stopping EC2 test agents
;ec2_key=<access key>
;ec2_secret=<secret>

; EC2 default instance size (defaults to m3.medium, c4.large is recommended).
; Can be overridden in locations.ini for individual locations.
;ec2_instance_size=c4.large

; Should we automatically delete any EBS volumes marked as "available"?
; This can be used to prevent orphaned volumes but only if the account
; doesn't expect to keep offline EBS volumes.
;ec2_prune_volumes=1

; Start an EC2 instance for every X tests in the queue (up to the location max)
;EC2.ScaleFactor=100

; Pass the private IP address of the server through user-data for auto-launch agents instead of public EIP
;ec2_use_server_private_ip=1

; !!! ONLY SET THIS FOR LINUX AGENTS !!!
;
; Number of minutes to let an instance run idle before terminating.  This
; is only helpful for Linux agents, where EC2 gets billed per second, with a
; minimum of 60 seconds.
; https://aws.amazon.com/about-aws/whats-new/2017/10/announcing-amazon-ec2-per-second-billing/
;
; Be careful, it is possible to set this too low.  It needs to be longer than
; the time it takes for AWS to spin up a new instance and wptagent to start
; processing tests.
;
; Windows is still billed hourly.  Do not set this if you are using Windows
; agents.
;EC2.IdleTerminateMinutes=15

; Tags to add to the agent instances
; EC2.tags="myTag=>myValue|foo=>bar"

; IAM instance profile ID to assign to the agent instances
; EC2.iamInstanceProfile=name-of-instance-profile

; Default location when using EC2 auto-scaling - this setting is required for auto-scaling
;EC2.default=us-east-1

; Per-location minimum and maximum EC2 instance counts.
; By default the minimum will be 0 and the maximum will be 1.
; This needs to be specified for every location where you want
; different settings (EC2.<location>.min/max).
; Don't forget to also set the EC2.default region to enable auto-scaling.
;EC2.us-east-1.min=0
;EC2.us-east-1.max=1

; Per-location Security Group, Subnet IDs and Key Name to enable launching into VPCs
; (note that this will pin your instances to the availability zone associated with
; the subnet). This is required only if you do not have a default VPC.
;EC2.us-west-2.securityGroup=sg-a0011b223,sg-b1122c334
;EC2.us-west-2.subnetId=subnet-aaa0011bc1
;EC2.us-west-2.keyName=my-ssh-key
